<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.3.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>lake.pool</groupId>
	<artifactId>spring-data-jpa</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>spring-data-jpa</name>
	<description>Study Spring Data JPA</description>

	<properties>
		<java.version>11</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>
		<!--	postgre driver 설정--> <!-- jdbc는 java 안에 자동으로 들어있음-->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
        </dependency>

		<!-- Query DSL : querydsl-apt >> Entity 모델에 맞는 query용 domain 코드를 생성해줌-->
		<dependency>
			<groupId>com.querydsl</groupId>
			<artifactId>querydsl-apt</artifactId>
		</dependency>
		<dependency>
			<groupId>com.querydsl</groupId>
			<artifactId>querydsl-jpa</artifactId>
		</dependency>

		<!-- HATEOAS -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>

		<!-- Specifications : Query DSL과 비슷하게 타입세이프한 쿼리 제공 -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-jpamodelgen</artifactId>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>


	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>com.mysema.maven</groupId>
				<artifactId>apt-maven-plugin</artifactId>
				<version>1.1.3</version>
				<executions>
					<execution>
						<goals>
							<goal>process</goal>
						</goals>
						<configuration>
							<outputDirectory>target/generated-sources/java</outputDirectory>   <!-- 파일 생성할 폴더 타켓-->
							<processor>com.querydsl.apt.jpa.JPAAnnotationProcessor</processor>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
<!--		Specifications 패키징 할때 maven 플러그인 설정 -->
<!--		<plugin>-->
<!--			<groupId>org.bsc.maven</groupId>-->
<!--			<artifactId>maven-processor-plugin</artifactId>-->
<!--			<version>2.0.5</version>-->
<!--			<executions>-->
<!--				<execution>-->
<!--					<id>process</id>-->
<!--					<goals>-->
<!--						<goal>process</goal>-->
<!--					</goals>-->
<!--					<phase>generate-sources</phase>-->
<!--					<configuration>-->
<!--						<processors>-->

<!--							<processor>org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor</processor>-->
<!--						</processors>-->
<!--					</configuration>-->
<!--				</execution>-->
<!--			</executions>-->
<!--			<dependencies>-->
<!--				<dependency>-->
<!--					<groupId>org.hibernate</groupId>-->
<!--					<artifactId>hibernate-jpamodelgen</artifactId>-->
<!--					<version>${hibernate.version}</version>-->
<!--				</dependency>-->
<!--			</dependencies>-->
<!--		</plugin>-->
	</build>

</project>
